#
# The MIT License
#
# Copyright 2024 Vector Informatik, GmbH.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

vectorcast_execute:
  stage: test
  
  variables:
    GIT_CLEAN_FLAGS: none

    GIT_SUBMODULE_STRATEGY: recursive
    
    # Relative path from checkout to the VectorCAST Project
    VC_Project: "Project.vcm"

    # Use --ci for VectorCAST Continuous Integration (headless) licenses; otherwise, set to ""
    VC_UseCILicense: "--ci"

    # Use "--incremental" to use VecteorCAST Change Based Testing; otherwise, set to ""
    VC_useCBT: "--incremental"

    # Use "--jobs=##" to use parallel number of jobs per compiler node; otherwise, for serial build/execute set to "" or "--jobs=1"
    VC_jobs: "--jobs=4"

  tags:
    - vectorcast

  coverage: '/coverage: \d+.\d+% of statements/'

  script:
    # add any environment update here (env vars, pathing, etc)
    #    - $Env:VCAST_DEMO_SRC_BASE = "${env:CI_PROJECT_DIR}/CurrentRelease"
    #    - $Env:Path = $env:Path + ";${env:VECTORCAST_DIR}/mingw/bin"
    #    - $Env:VECTORCAST_DIR = "c:/vcast/2023sp5"
    # for sonarqube processing use --sonarqube
    # to make job fail on any failed testcase use --exit_with_failed_count
    # to make job fail on percentage failed testcase above value --exit_with_failed_count[=value]
    # to process  PC-lint Plus XML data into JSON format for GitLab codequality 
    #    - Run PC-lint Plus and generate XML formatted data
    #    - Add --pclp_input=<PC-lint Plus XML data file name>
    #    - Result will be stored in xml_data/pclp/gl-code-quality-report.json
    #    - Uncomment lines before for gl-code-quality-report.json
    
    # run the VC Project & capture the output
    - $process = Start-Process -PassThru -NoNewWindow -wait ${env:VECTORCAST_DIR}\vpython.exe  -ArgumentList "./vc_scripts/vcast_exec.py `"$VC_Project`"  --build-execute --junit --cobertura --exit_with_failed_count=10 $VC_UseCILicense $VC_useCBT $VC_jobs"
    - exit $process.ExitCode

  artifacts:
    untracked: false
    expire_in: 30 days    
    reports:
#      codequality: xml_data/pclp/gl-code-quality-report.json
      junit: xml_data/junit/test_results*.xml
      coverage_report:
        coverage_format: cobertura
        path: xml_data/cobertura/coverage_results*.xml
    paths:
#      - xml_data/pclp/gl-code-quality-report.json   
      - xml_data/**/*.xml
      - html_reports/*.html

