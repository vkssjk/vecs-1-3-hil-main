name: ECU Test Level 1

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build-sut:
    name: Build SUT
    runs-on: lvl1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        env:
          NODE_EXTRA_CA_CERTS: .\certs\Vector_Root_2.0.crt          

      - name: Cache SUT
        id: cache-sut
        uses: actions/cache@v4
        env:
          NODE_EXTRA_CA_CERTS: .\certs\Vector_Root_2.0.crt         
        with:
          path: |
            .\ECU\Level1SUT
          key: ${{ hashFiles('.\ECU\BFC\Appl\Source', '.\ECU\BFC\Appl\IncludeLvl1', '.\ECU\BFC\LightControl-level1.vttmake', '.\ECU\BFC\LightCtrl.arxml') }}

      - name: Run vVIRTUALtarget
        if: steps.cache-sut.outputs.cache-hit != 'true'
        run: |
          &"$env:vVIRTUALtarget_InstallDir\VttMake.exe" make .\ECU\LightControl-level1.vttmake;
          if(-Not $?)
          {
            Write-Host "VttMake step failed." -ForegroundColor red
            Exit -1
          } 

      - name: Export ECU Logs
        uses: actions/upload-artifact@v3
        if: always()
        env:
          NODE_EXTRA_CA_CERTS: .\certs\Vector_Root_2.0.crt 
        with:
          name: ECU_Logs
          path: .\ECU\BFC\Log
          retention-days: 7

  build-simulation:
    name: Build simulation
    needs: [build-sut]
    runs-on: lvl1
    steps:
      - name: Make environment
        run: |
            &"$env:CANoe4SWSE_InstallDir64\environment-make.exe" -o .\compiled-environment-and-tests -A Win32 -s L1_vECU .\environment-make\venvironment.yaml

      - name: Make test units
        run: |
            & "$env:CANoe4SWSE_InstallDir64\test-unit-make.exe" -e .\compiled-environment-and-tests\L1_vECU.venvironment -o .\compiled-environment-and-tests .\tests\auto\auto.vtestunit.yaml .\tests\basic\basic.vtestunit.yaml    

  run-tests-simulation:
    name: Run simulation
    needs: build-simulation
    runs-on: lvl1
    strategy:
      matrix:
        TESTNAME: [auto, basic]
      fail-fast: false
    steps:
      - name: Run CANoe4SW Server Edition
        run : |
          & "$env:CANoe4SWSE_InstallDir64\canoe4sw-se.exe" .\compiled-environment-and-tests\L1_vECU.venvironment -d .\simulation --win32 --port-rtk-api none --test-unit .\compiled-environment-and-tests\${{ matrix.TESTNAME }}.vtestunit;
          Write-Host "CANoe4SW Server Edition returned exit code $LASTEXITCODE"

      - name: Export test reports
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v3
        env:
          NODE_EXTRA_CA_CERTS: .\certs\Vector_Root_2.0.crt 
        with:
          name: Test Reports CANoe-vECU lvl1
          path: |
            .\simulation\TestReports\
          retention-days: 7

      - name: Upload log files
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v3
        env:
          NODE_EXTRA_CA_CERTS: .\certs\Vector_Root_2.0.crt         
        with:
          name: Log Files ${{ matrix.TESTNAME }}
          path: .\simulation\*.txt

  display-test-report:
    name: Display test report
    if: ${{ !cancelled() }}
    needs: run-tests-simulation
    runs-on: lvl1
    steps:
      - name: Convert all test reports to XUnit format
        working-directory: .\simulation\TestReports\
        run: |
          get-childitem . -Filter *.vtestreport | foreach {
            &"$env:TestReportViewer_InstallDir\ReportViewerCli.exe" -r $_ -xu
          }

      - name: Display test results
        uses: dorny/test-reporter@v1.9.1
        with:
          name: vECU lvl1 Test Results                   # Name of the check run which will be created
          path: "./simulation/TestReports/*_xunit.xml"   # Path to test results
          reporter: java-junit                           # Format of test results
        env:
          NODE_EXTRA_CA_CERTS: .\certs\Vector_Root_2.0.crt 

  # Job to display the test reports in squore
  job-AddToSquore:
    name: Add Test Report to Squore
    if: ${{ !cancelled() }}
    needs: run-tests-simulation
    runs-on: dev
    steps:
      - name: Download test reports
        uses: actions/download-artifact@v2
        env:
          NODE_EXTRA_CA_CERTS: .\..\..\..\certs\Vector_Root_2.0.crt  
        with:
          name: Test Reports CANoe-vECU lvl1
          path: ./downloaded-reports-lvl1/

      # convert all test reports to XML format for Squore
      - name: Convert all test reports to xml format
        run: |
          get-childitem . -Filter *.vtestreport | foreach {
            &"$env:TestReportViewer_InstallDir\ReportViewerCli.exe" -r $_ -e
          }
        working-directory: .\downloaded-reports-lvl1\  
      
      - name: Upload test reports to Squore
        run: |
          & .\import.bat "lvl1" "lvl1-${{ github.run_id }}-${{ github.run_attempt }}"
        working-directory: .\..\..\..\SquoreAgent\  
